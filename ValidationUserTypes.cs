// The core validation infra.
//
// * ValidationError represents a single error associated with a particular property/field. The error 
//   includes a message string, the name of the member, and a 'path' leading through to the member from the
//   top of the object graph.
//
// * ValidationResult is an accumulator of errors that is return by the validator. The validator records errors
//   for anything that's wrong.
//
// * IValidatable is the interface that represents a type capable of validating itselt. Implementations of this
//   interface are normally generated by the source generator, but can potentially be hand-written if desired.

#pragma warning disable IDE0060

using System.Diagnostics.CodeAnalysis;
using System.Diagnostics;
using System.Runtime.CompilerServices;

namespace Microsoft.Extensions.ModelValidation;

public record ValidationError(IReadOnlyList<string> Path, string Member, string Message);

public struct ValidationResult
{
    public void RecordError(string mamber, string message) { throw new NotImplementedException(); }
    public void RecordContext(string member, ValidationResult? context) { throw new NotImplementedException(); }
    public IReadOnlyList<ValidationError> Errors { get; }
}

/// <summary>
/// When a model can validate itself
/// </summary>
public interface IValidatable
{
    ValidationResult? Validate();
}
